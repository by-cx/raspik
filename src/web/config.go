package main

// ConfigFileName defines where the config file is located.
const ConfigFileName = "/etc/raspirack.conf"

// InstanceConfiguration holds info about how the local servers is configured
type InstanceConfiguration struct {
	// Key used to encrypt the config file
	EncryptionKey string

	// General contains common parameters of the instance
	General struct {
		// true if home directories should be share via Samba
		SambaHomeDirectories bool `yaml:"samba_home_directories"`
		// which drive contain home directories, default is 0
		HomesDrive int8 `yaml:"homes_drive" default:"0"`
		// true if home directories should be backed up
		HomesBackup bool `yaml:"homes_backup"`
		// default group used for all users
		SharedGroup string `yaml:"shared_group" default:"shared"`
	} `yaml:"general"`

	// Backup holds info about how data is backed up
	Backup struct {
		// How many daily backups to keep
		KeepDaily int8 `yaml:"keep_daily"`
		// How many weekly backups to keep
		KeepWeekly int8 `yaml:"keep_weekly"`
		// How many monthly backups to keep
		KeepMonthly int8 `yaml:"keep_monthly"`
		// Configuration of Restic, tool to backup stuff
		ResticEnv struct {
			// S3 Access Key
			AWSAccessKeyID string `yaml:"AWS_ACCESS_KEY_ID"`
			// S3 Secret Access Key
			AWSSecretAccessKey string `yaml:"AWS_SECRET_ACCESS_KEY"`
			// Password used to encrypt the backup
			ResticPassword string `yaml:"RESTIC_PASSWORD"`
			// Restic repository (https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html)
			ResticRepository string `yaml:"RESTIC_REPOSITORY"`
		}
	} `yaml:"backup"`

	// Users field holds info about all users
	Users []struct {
		// Username
		Name string `yaml:"name"`
		// Plain password, it's needed for be able to set different password to services
		PasswordRaw string `yaml:"password"`
		// Password hash (BCRYPT)
		PasswordHash string `yaml:"password_hash"`
		// Configuration of services
		Services struct {
			// Configuration of syncthing
			Syncthing struct {
				Enabled bool `yaml:"enabled"`
			} `yaml:"syncthing"`
		} `yaml:"services"`
	} `yaml:"users"`

	// Drives represents list of physical drives
	Drives []struct {
		// Human reable name
		Name string `yaml:"name"`
		// UUID generated by mkfs
		UUID string `yaml:"uuid"`
		// True if the drive is encrypted
		Encrypted bool `yaml:"encrypted"`
	} `yaml:"drives"`

	// Shares contains list of samba shared directories
	Shares []struct {
		// Share name
		Name string `yaml:"name"`
		// On which drive this share is
		Drive int8 `yaml:"drive"`
		// True if this share is backed up
		Backup bool `yaml:"backup"`
	} `yaml:"shares"`
}

// Save saves the config file into a file on the disk after it's encrypted
func (i *InstanceConfiguration) Save() error {
	return nil
}
